#!/bin/bash

echo "Creating CA Bundle with OpenSSL-GOST"

if ! [ -d ca ]; then
    mkdir ca
fi

cd ca

if ! [ -d certs ]; then
    mkdir certs
fi

if ! [ -d csr ]; then
    mkdir csr
fi

if ! [ -d newcerts ]; then
    mkdir newcerts
fi

if ! [ -d private ]; then
    mkdir private
fi

chmod 700 private
touch index.txt
echo 1000 > serial

touch openssl.cnf

CA_DIR=$(pwd)

echo -e "\
[ ca ]
default_ca = CA_default

[ CA_default ]
dir               = $CA_DIR
certs             = \$dir/certs
crl_dir           = \$dir/crl
new_certs_dir     = \$dir/newcerts
database          = \$dir/index.txt
serial            = \$dir/serial
RANDFILE          = \$dir/private/.rand

private_key       = \$dir/private/ca.key
certificate       = \$dir/certs/ca.cert

crlnumber         = \$dir/crlnumber
crl               = \$dir/crl/ca.crl
crl_extensions    = crl_ext
default_crl_days  = 30

default_md        = md_gost12_256

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_strict

[ policy_strict ]
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
default_bits        = 256
distinguished_name  = req_distinguished_name
string_mask         = utf8only
 
default_md          = md_gost12_256

x509_extensions     = v3_ca

[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
organizationName                = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

countryName_default             = RU
stateOrProvinceName_default     = Moscow  
localityName_default            = Moscow  
organizationName_default        = Aladdin  
#organizationalUnitName_default  =  
#emailAddress_default            =

[ v3_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth

[ crl_ext ]
authorityKeyIdentifier=keyid:always

[ ocsp ]
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
" > openssl.cnf

openssl req -newkey gost2012_256 -pkeyopt paramset:TCA -nodes -subj "/C=RU/ST=Moscow/L=Moscow/O=Dis/CN=Test" -keyout private/ca.key -noout

openssl req -config openssl.cnf -key private/ca.key -new -x509 -days 7300 -md_gost12_256 -extensions v3_ca -subj "/C=RU/ST=Moscow/L=Moscow/O=Dis/CN=Test" -out certs/ca.cert

openssl req -newkey gost2012_256 -pkeyopt paramset:TCA -nodes -subj "/C=RU/ST=Moscow/L=Moscow/O=Dis/CN=Test-Server" -keyout private/server.key -noout

openssl req -config openssl.cnf -new -md_gost12_256 -key private/server.key -subj "/C=RU/ST=Moscow/L=Moscow/O=Dis/CN=Test-Server" -out csr/server.csr

openssl ca -config openssl.cnf -extensions v3_intermediate_ca -days 3650 -notext -md gost12_256 -in csr/server.csr -out certs/server.cert -batch -notext


# openssl req -new -key CA/ca.key -md_gost12_256 -subj "/C=RU/ST=Moscow/L=Moscow/O=Dis/CN=Test" -out CA/ca.req

# openssl ca -days 365 -policy 